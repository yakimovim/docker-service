@using Service.Model;

<h3>Response specification</h3>

@for(int i = 0; i < Items.Count; i++)
{
	var item = Items[i];

	<div class="m-3">

	@switch(item)
	{
		case Delay delay:
			{
				<div>Delay</div>

				break;
			}
		case ProbableDelay delay:
			{
				<div>Probable delay</div>

				break;
			}
		case Response response:
			{
				<ResponseDefinitionComponent Item=response Index=i Total=Items.Count 
					Delete=DeleteItem MoveUp=MoveItemUp MoveDown=MoveItemDown />

				break;
			}
		case ProbableResponse response:
			{
				<div>Probable response</div>

				break;
			}
		case Call call:
			{
				<div>Call</div>

				break;
			}
		case ProbableCall call:
			{
				<div>Probable call</div>

				break;
			}
	}

	</div>
}

<div class="d-grid gap-2">
	<div class="dropdown">
	  <button class="btn btn-secondary dropdown-toggle" type="button" id="addItemDropdownButton" data-bs-toggle="dropdown" aria-expanded="false">
		Add item...
	  </button>
	  <ul class="dropdown-menu" aria-labelledby="addItemDropdownButton">
		<li><a class="dropdown-item" href="#" @onclick="AddResponseItem">Add response item</a></li>
	  </ul>
	</div>
	<button class="btn btn-primary m-3" @onclick="ApplyChanges">Apply</button>
</div>
